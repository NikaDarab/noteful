{"ast":null,"code":"import _classCallCheck from \"/Users/nikadarab/dev/thinkful/noteful-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nikadarab/dev/thinkful/noteful-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nikadarab/dev/thinkful/noteful-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nikadarab/dev/thinkful/noteful-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nikadarab/dev/thinkful/noteful-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nikadarab/dev/thinkful/noteful-client/src/AddNote/AddNote.js\";\nimport React, { Component } from \"react\";\nimport NotefulForm from \"../NotefulForm/NotefulForm\";\nimport ApiContext from \"../ApiContext\";\nimport config from \"../config\";\nimport \"./AddNote.css\";\n\nvar AddNote =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddNote, _Component);\n\n  function AddNote(props) {\n    var _this;\n\n    _classCallCheck(this, AddNote);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddNote).call(this, props));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var newNote = {\n        name: e.target[\"note-name\"].value,\n        content: e.target[\"note-content\"].value,\n        folderId: e.target[\"note-folder-id\"].value,\n        modified: new Date()\n      };\n      fetch(\"\".concat(config.API_ENDPOINT, \"/notes\"), {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(newNote)\n      }).then(function (res) {\n        if (!res.ok) return res.json().then(function (e) {\n          return Promise.reject(e);\n        });\n        return res.json();\n      }).then(function (note) {\n        _this.context.addNote(note);\n\n        _this.props.history.push(\"/folder/\".concat(note.folderId));\n      }).catch(function (error) {\n        console.error({\n          error: error\n        });\n      });\n    };\n\n    _this.updateNoteName = function (newNoteName) {\n      _this.setState({\n        noteName: newNoteName\n      });\n    };\n\n    _this.updateContent = function (newContent) {\n      _this.setState({\n        noteContent: newContent\n      });\n    };\n\n    _this.state = {\n      noteName: \"\",\n      noteContent: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(AddNote, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$context$folders = this.context.folders,\n          folders = _this$context$folders === void 0 ? [] : _this$context$folders;\n      var errpr = this.state.error ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, this.state.error) : \"\";\n      return React.createElement(\"section\", {\n        className: \"AddNote\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Create a note\"), React.createElement(NotefulForm, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"note-name-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"note-name-input\",\n        name: \"note-name\",\n        value: this.state.noteName,\n        onChange: function onChange(e) {\n          return _this2.updateNoteName(e.target.value);\n        },\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"note-content-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Content\"), React.createElement(\"textarea\", {\n        id: \"note-content-input\",\n        name: \"note-content\",\n        onChange: function onChange(e) {\n          return _this2.updateContent(e.target.value);\n        },\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"note-folder-select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Folder\"), React.createElement(\"select\", {\n        id: \"note-folder-select\",\n        name: \"note-folder-id\",\n        onChange: function onChange(e) {\n          return _this2.updateContent(e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"...\"), folders.map(function (folder) {\n        return React.createElement(\"option\", {\n          key: folder.id,\n          value: folder.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, folder.name);\n      }))), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        disabled: this.state.noteName.length === 0 || this.state.noteContent.length === 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Add note\"))));\n    }\n  }]);\n\n  return AddNote;\n}(Component);\n\nAddNote.contextType = ApiContext;\nexport { AddNote as default };","map":{"version":3,"sources":["/Users/nikadarab/dev/thinkful/noteful-client/src/AddNote/AddNote.js"],"names":["React","Component","NotefulForm","ApiContext","config","AddNote","props","handleSubmit","e","preventDefault","newNote","name","target","value","content","folderId","modified","Date","fetch","API_ENDPOINT","method","headers","body","JSON","stringify","then","res","ok","json","Promise","reject","note","context","addNote","history","push","catch","error","console","updateNoteName","newNoteName","setState","noteName","updateContent","newContent","noteContent","state","folders","errpr","map","folder","id","length","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport NotefulForm from \"../NotefulForm/NotefulForm\";\nimport ApiContext from \"../ApiContext\";\nimport config from \"../config\";\nimport \"./AddNote.css\";\n\nexport default class AddNote extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      noteName: \"\",\n      noteContent: \"\",\n    };\n  }\n  static contextType = ApiContext;\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const newNote = {\n      name: e.target[\"note-name\"].value,\n      content: e.target[\"note-content\"].value,\n      folderId: e.target[\"note-folder-id\"].value,\n      modified: new Date(),\n    };\n    fetch(`${config.API_ENDPOINT}/notes`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify(newNote),\n    })\n      .then((res) => {\n        if (!res.ok) return res.json().then((e) => Promise.reject(e));\n        return res.json();\n      })\n      .then((note) => {\n        this.context.addNote(note);\n        this.props.history.push(`/folder/${note.folderId}`);\n      })\n      .catch((error) => {\n        console.error({ error });\n      });\n  };\n  updateNoteName = (newNoteName) => {\n    this.setState({\n      noteName: newNoteName,\n    });\n  };\n\n  updateContent = (newContent) => {\n    this.setState({\n      noteContent: newContent,\n    });\n  };\n  render() {\n    const { folders = [] } = this.context;\n    const errpr = this.state.error ? <div>{this.state.error}</div> : \"\";\n    return (\n      <section className=\"AddNote\">\n        <h2>Create a note</h2>\n        <NotefulForm onSubmit={this.handleSubmit}>\n          <div className=\"field\">\n            <label htmlFor=\"note-name-input\">Name</label>\n            <input\n              type=\"text\"\n              id=\"note-name-input\"\n              name=\"note-name\"\n              value={this.state.noteName}\n              onChange={(e) => this.updateNoteName(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"field\">\n            <label htmlFor=\"note-content-input\">Content</label>\n            <textarea\n              id=\"note-content-input\"\n              name=\"note-content\"\n              onChange={(e) => this.updateContent(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"field\">\n            <label htmlFor=\"note-folder-select\">Folder</label>\n            <select\n              id=\"note-folder-select\"\n              name=\"note-folder-id\"\n              onChange={(e) => this.updateContent(e.target.value)}\n            >\n              <option value={null}>...</option>\n              {folders.map((folder) => (\n                <option key={folder.id} value={folder.id}>\n                  {folder.name}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"buttons\">\n            <button\n              type=\"submit\"\n              disabled={\n                this.state.noteName.length === 0 ||\n                this.state.noteContent.length === 0\n              }\n            >\n              Add note\n            </button>\n          </div>\n        </NotefulForm>\n      </section>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}